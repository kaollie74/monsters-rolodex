{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","console","log","className","src","monster","id","alt","name","email","CardList","monsters","map","i","Search","handleChange","placeholder","type","other","onChange","App","state","searchField","e","setState","target","value","Axios","get","then","res","data","this","filteredMonsters","filter","el","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAEaA,G,YAAO,SAACC,GAEnB,OADAC,QAAQC,IAAIF,GAEV,sBAAKG,UAAU,iBAAf,UACE,qBAAKC,IAAG,+BAA0BJ,EAAMK,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAKP,EAAMK,QAAQG,OACnB,6BAAKR,EAAMK,QAAQI,aCKVC,G,MAVS,SAACV,GAAW,IAC1BW,EAAaX,EAAbW,SACR,OACE,qBAAKR,UAAU,YAAf,SACGQ,EAASC,KAAI,SAACP,EAASQ,GAAV,OACZ,cAAC,EAAD,CAAuBR,QAASA,GAArBA,EAAQC,W,eCOZQ,G,MAbO,SAACd,GAAW,IACzBe,EAA6Cf,EAA7Ce,aAAcC,EAA+BhB,EAA/BgB,YAAaC,EAAkBjB,EAAlBiB,KAASC,EADZ,YACqBlB,EADrB,uCAE/B,OACE,iDACMkB,GADN,IAEEf,UAAU,SACVgB,SAAUJ,EACVE,KAAOA,GAAQ,SACfD,YAAaA,O,iBC0BJI,E,4MA7BbC,MAAQ,CACNV,SAAU,GACVW,YAAa,I,EAOfP,aAAe,SAACQ,GACd,EAAKC,SAAS,CAAEF,YAAaC,EAAEE,OAAOC,S,kEANnB,IAAD,OAClBC,IAAMC,IAAI,8CAA8CC,MAAK,SAACC,GAAD,OAC3D,EAAKN,SAAS,CAAEb,SAAUmB,EAAIC,Y,+BAMxB,IAAD,SAC2BC,KAAKX,MAA/BC,EADD,EACCA,YACFW,EAFC,EACctB,SACauB,QAAO,SAACC,GAAD,OACvCA,EAAG3B,KAAK4B,cAAcC,SAASf,EAAYc,kBAE7C,OACE,sBAAKjC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEY,aAAc,SAACQ,GAAD,OAAO,EAAKR,aAAaQ,IACvCP,YAAY,oBAEd,cAAC,EAAD,CAAUL,SAAUsB,W,GAzBVK,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.09668b86.chunk.js","sourcesContent":["import React from \"react\";\nimport './card.styles.css'\nexport const Card = (props) => {\n  console.log(props)\n  return (\n    <div className='card-container'>\n      <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt='Monster'/>\n      <h2>{props.monster.name}</h2>\n      <h2>{props.monster.email}</h2>\n    </div>\n  );\n};\n\n","import React from \"react\";\nimport { Card } from \"../card/card.component\";\nimport \"./card-list.styles.css\";\nexport const CardList = (props) => {\n  const { monsters } = props;\n  return (\n    <div className=\"card-list\">\n      {monsters.map((monster, i) => (\n        <Card key={monster.id} monster={monster} />\n      ))}\n    </div>\n  );\n};\nexport default CardList;\n","import React from \"react\";\nimport \"./search-box.styles.css\";\nexport const Search = (props) => {\n  const {handleChange, placeholder, type, ...other} = props;\n  return (\n    <input\n      {...other}\n      className=\"search\"\n      onChange={handleChange}\n      type={ type || 'search'}\n      placeholder={placeholder}\n    />\n  );\n};\n\nexport default Search;\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport CardList from \"./components/card-list/card-list.component\";\nimport Search from \"./components/search-box/search-box.component.jsx\";\nimport Axios from \"axios\";\n\nclass App extends Component {\n  state = {\n    monsters: [],\n    searchField: \"\",\n  };\n  componentDidMount() {\n    Axios.get(\"https://jsonplaceholder.typicode.com/users\").then((res) =>\n      this.setState({ monsters: res.data })\n    );\n  }\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n  render() {\n    const { searchField, monsters } = this.state;\n    const filteredMonsters = monsters.filter((el) =>\n      el.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <Search\n          handleChange={(e) => this.handleChange(e)}\n          placeholder=\"search monsters\"\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}